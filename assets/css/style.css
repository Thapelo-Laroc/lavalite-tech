/*  
  -------------------------------------------
  -----      CSS for the font used      -----
  -------------------------------------------
*/

@import url('./font/inter.css');

body {
    font-family: 'Inter var', sans-serif;
    font-feature-settings: "cv02","cv03","cv04","cv11";
}



/*  
  ------------------------------------------- 
  -----      CSS for the preloader      -----
  -------------------------------------------
*/

.loader-wrapper {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    bottom: 0 !important;
    right: 0 !important;
    background-color: rgba(var(--bs-body-bg-rgb), 1) !important;
    display:flex;
    justify-content: center !important;
    align-items: center !important;
    z-index: 2000 !important;
}



/*  
  -------------------------------------------------------------------------------- 
  -----      CSS for the default styles for both directions RTL and LTR      -----
  --------------------------------------------------------------------------------
*/

.left-to-right {
    display: none !important;
}
.right-to-left {
    display: none !important;
}
[dir="ltr"] .left-to-right {
    display: inline !important;
}
[dir="rtl"] .right-to-left {
    display: inline !important;
}

[dir="rtl"] .rtl-flip {
    transform: scaleX(-1) !important;
}

[dir="rtl"] .breadcrumb-item + .breadcrumb-item::before {
    transform: scaleX(-1);
}



/*  
  -------------------------------------------  
  -----      CSS for the AOS's RTL      -----
  -------------------------------------------
*/

[dir="rtl"] [data-aos=fade-left] {
    transform: translate3d(-100px, 0, 0);
}
[dir="rtl"] [data-aos=fade-right] {
    transform: translate3d(100px, 0, 0); 
}

[dir="rtl"] [data-aos=fade-up-left] {
    transform: translate3d(-100px, 100px, 0); 
}
[dir="rtl"] [data-aos=fade-up-right] {
    transform: translate3d(100px, 100px, 0); 
}

[dir="rtl"] [data-aos=fade-down-left] {
    transform: translate3d(-100px,-100px,0); 
}
[dir="rtl"] [data-aos=fade-down-right] {
    transform: translate3d(100px, -100px, 0); 
}

[dir="rtl"] [data-aos=flip-right] {
    transform: perspective(2500px) rotateY(-100deg);
}
[dir="rtl"] [data-aos=flip-left] {
    transform: perspective(2500px) rotateY(100deg);
}
[dir="rtl"] [data-aos=flip-right].aos-animate {
    transform: perspective(2500px) rotateY(0);
}
[dir="rtl"] [data-aos=flip-left].aos-animate {
    transform: perspective(2500px) rotateY(0);
}

[dir="rtl"] [data-aos=slide-left] {
    transform: translate3d(-100%,0,0);
}
[dir="rtl"] [data-aos=slide-right] {
    transform: translate3d(100%,0,0);
}

[dir="rtl"] [data-aos=zoom-in-right] {
    transform: translate3d(100px,0,0) scale(.6);
}
[dir="rtl"] [data-aos=zoom-in-left] {
    transform: translate3d(-100px,0,0) scale(.6);
}

[dir="rtl"] [data-aos=zoom-out-right] {
    transform: translate3d(100px,0,0) scale(1.2);
}
[dir="rtl"] [data-aos=zoom-out-left] {
    transform: translate3d(-100px,0,0) scale(1.2);
}






/*  
  ------------------------------------------------
  -----      CSS for the top navigation      -----
  ------------------------------------------------
*/

.navigation {
    z-index: 1030;
}




/*  
  ----------------------------------------------------  
  -----      CSS for the button back to top      -----
  ----------------------------------------------------
*/

.btn-back-to-top {
    position: fixed;
    bottom: 20px;
    display: none;
    z-index: 10;
}

[dir="ltr"] .btn-back-to-top {
    right: 20px;
}

[dir="rtl"] .btn-back-to-top {
    left: 20px;
}



/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}


/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}


a {
  text-decoration: none;
  display: block;
  color: inherit;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.d-flex {
  display: flex;
}

/* cards */
.cards-container {
  font-size: 1rem;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1.25rem;
  margin: 1.25rem;
}

/* card */
.card {
  flex-direction: column;
  background-color: hsl(0, 0%, 100%);
  color: hsl(0, 0%, 0%);
  border-radius: 0.3125rem;
  box-shadow: 3px 2px 14px rgba(255, 255, 255, 0.2);
  max-width: 28.125rem;
  flex: 1 0 18.75rem;
  overflow: hidden;
  transition: all 300ms ease-in-out;
}

.card:is(:hover, :focus-visible) {
  transform: translateY(-1rem);
  box-shadow: 2px 3px 18px rgba(255, 255, 255, 0.4);
}

.card-banner img {
  object-fit: cover;
  filter: saturate(0);
  transition: all 300ms ease-in-out;
}

.card-banner img:is(:hover, :focus-visible) {
  filter: saturate(1);
}

.card-header {
  padding: 1rem;
  flex-direction: column;
}

.card-title {
  font-size: 1.75rem;
  margin-block-end: 0.3125rem;
}

.card-snippet {
  font-size: 0.875rem;
  margin-block-end: 0.5rem;
}

.card-button {
  margin-block-start: auto;
  font-weight: bold;
  text-transform: uppercase;
  padding-inline-start: 1rem;
}




